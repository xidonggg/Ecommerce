<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
           
	<context:component-scan base-package="com"/> 

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
		<property name="jdbcUrl" value="jdbc:sqlserver://localhost:1433;DatabaseName=dbname;characterEncoding=UTF-8"/>
		<property name="user" value="sa"/>
		<property name="password" value="sa"/>
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="1"/>
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="2"/>	
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="300"/>
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60"/>	
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5"/>	
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60"/>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		 <property name="mappingResources">
			    <list>
                <value>com/po/User.hbm.xml</value>
                <value>com/po/Commodity.hbm.xml</value>
                <value>com/po/Admin.hbm.xml</value>
                <value>com/po/CartItem.hbm.xml</value>
                <value>com/po/Order.hbm.xml</value>
                <value>com/po/OrderItem.hbm.xml</value>        
                <value>com/po/LeaveMessage.hbm.xml</value>           
			    </list>
		</property>
		 <property name="hibernateProperties">
			 <value>
			      hibernate.dialect=org.hibernate.dialect.SQLServerDialect
			      hibernate.hbm2ddl.auto=update
			      hibernate.show_sql=false
			      hibernate.format_sql=false
			  </value>
		 </property>
	</bean>
	
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!--使用基于注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- bean实例对象 -->
	<bean id="user" class="com.po.User"/>
	<bean id="commodity" class="com.po.Commodity"/>
	<bean id="cartItem" class="com.po.CartItem"/>
	<bean id="admin" class="com.po.Admin"/>
	<bean id="orderItem" class="com.po.OrderItem"/>
	<bean id="order" class="com.po.Order"/>
	<bean id="leaveMessage" class="com.po.LeaveMessage"/>
	
	<!-- DAO 实例对象 -->
	<bean id="userDAO" class="com.dao.impl.UserDAO">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="commodityDAO" class="com.dao.impl.CommodityDAO">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="adminDAO" class="com.dao.impl.AdminDAO">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="cartItemDAO" class="com.dao.impl.CartItemDAO">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="orderDAO" class="com.dao.impl.OrderDAO">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="orderItemDAO" class="com.dao.impl.OrderItemDAO">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="leaveMessageDAO" class="com.dao.impl.LeaveMessageDAO">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
		
	<!-- CRUD 实例对象 -->
	<bean id="userService" class="com.service.impl.UserService" 
	abstract="false" lazy-init="default" autowire="default" dependency-check="default">
		<property name="userDAO" ref="userDAO"/>
		<property name="commodityDAO" ref="commodityDAO"/>
		<property name="leaveMessageDAO" ref="leaveMessageDAO"/>
	</bean>
	<bean id="commodityService" class="com.service.impl.CommodityService" 
	abstract="false" lazy-init="default" autowire="default" dependency-check="default">
		<property name="commodityDAO" ref="commodityDAO"/>
	</bean>
	<bean id="adminService" class="com.service.impl.AdminService" 
	abstract="false" lazy-init="default" autowire="default" dependency-check="default">
		<property name="adminDAO" ref="adminDAO"/>
	</bean>
	<bean id="cartItemService" class="com.service.impl.CartItemService" 
	abstract="false" lazy-init="default" autowire="default" dependency-check="default">
		<property name="cartItemDAO" ref="cartItemDAO"/>
		<property name="commodityDAO" ref="commodityDAO"/>
	</bean>
	<bean id="orderService" class="com.service.impl.OrderService" 
	abstract="false" lazy-init="default" autowire="default" dependency-check="default">
		<property name="orderDAO" ref="orderDAO"/>
		<property name="orderItemDAO" ref="orderItemDAO"/>
		<property name="userDAO" ref="userDAO"/>
		<property name="commodityDAO" ref="commodityDAO"/>
	</bean>

	
	<!-- ACTION 实例对象> -->
	<bean id="userAction" class="com.action.UserAction">
		<property name="userService" ref="userService"/>
	</bean>
	<bean id="commodityAction" class="com.action.CommodityAction">
		<property name="commodityService" ref="commodityService"/>
		<!--<property name="user" ref="user"/>
		<property name="commodity" ref="commodity"/>  -->
		
	</bean>
	<bean id="adminAction" class="com.action.AdminAction">
		<property name="adminService" ref="adminService"/>
	</bean>
	<bean id="shoppingAction" class="com.action.ShoppingAction">
		<property name="commodityService" ref="commodityService"/>
		<property name="cartItemService" ref="cartItemService"/>
		<!-- <property name="user" ref="user"/>
		<property name="commodity" ref="commodity"/>
		<property name="cartItem" ref="cartItem"/> -->
		
	</bean>
	<bean id="orderAction" class="com.action.OrderAction">
		<property name="commodityService" ref="commodityService"/>
		<property name="cartItemService" ref="cartItemService"/>
		<property name="orderService" ref="orderService"/>
		<!-- 		<property name="order" ref="order"/>
		<property name="user" ref="user"/>
		<property name="commodity" ref="commodity"/>
		<property name="cartItem" ref="cartItem"/> -->
	</bean>
</beans>

